server {
    listen 80;
	server_name DOMAINNAME www.DOMAINNAME;
    return 301 https://DOMAINNAME$request_uri;
}
server {
    listen 443 ssl http2;

    root /var/www/DOMNAME/htdocs;
	client_max_body_size 100m;
    access_log /var/www/DOMNAME/logs/access_log;
	error_log /var/www/DOMNAME/logs/error_log;
    index index.php;

    server_name DOMNAME www.DOMNAME;

	ssl_certificate /etc/letsencrypt/live/DOMNAME/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/DOMNAME/privkey.pem;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;
	## We will adding dhparam generation later
	#ssl_dhparam /etc/ssl/certs/dhparam.pem;

    location = /favicon.ico {
		log_not_found off;
        access_log off;
    }

    location = /robots.txt {
		allow all;
        log_not_found off;
        access_log off;
    }

	## GZIP
	gzip on;
	gzip_static on;
	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_min_length 256;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

	## CHARSET
	charset utf-8;

    location / {
         # This is cool because no php is touched for static content.
         # include the "?$args" part so non-default permalinks doesn't break when using query string
         try_files $uri $uri/ /index.php?$args;
	}

    location ~ \.php$ {
         fastcgi_split_path_info ^(.+\.php)(/.+)$;
         fastcgi_pass unix:/var/run/php7.1-fpm-DOMNAME_SHORT.sock;
         fastcgi_param PATH_TRANSLATED $document_root$fastcgi_script_name;
         fastcgi_index index.php;
	     fastcgi_buffers 16 16k;
         fastcgi_buffer_size 32k;
         include fastcgi_params;
    }
	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
		expires max;
        log_not_found off;
    }
}
